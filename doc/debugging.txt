2017-08-18
Problemas al intentar empaquetar

Usando el target android de buildozer:
  Hay que añadir las requirements hostpython2 y android a buildozer.spec, pero...
  - El servicio de android no arranca. https://github.com/tshirtman/kivy_service_osc/issues/1
  - android.map_key no es un atributo del módulo (!?!)

Usando el target android_old


08-18 17:00:06.675 18485 18507 I python  :  Traceback (most recent call last):
08-18 17:00:06.675 18485 18507 I python  :    File "/home/toledo/Planilla/.buildozer/android/app/service/main.py", line 208, in <module> 08-18 17:00:06.676 18485 18507 I python  :    File "/home/toledo/Planilla/.buildozer/android/app/service/main.py", line 162, in schedule_alarms
08-18 17:00:06.676 18485 18507 I python  :    File "jnius/jnius_export_class.pxi", line 900, in jnius.jnius.JavaMultipleMethod.__call__ (jnius/jnius.c:25560)
08-18 17:00:06.677 18485 18507 I python  :  jnius.jnius.JavaException: No methods matching your arguments
08-18 17:00:06.700 18485 18507 I python  : Python for android ended.

El problema es con la llamada a https://developer.android.com/reference/android/app/AlarmManager.html#set(int, long, android.app.PendingIntent)
El segundo parámetro son los milisegundos. Cuando el valor es demasiado alto parece que hay un problema de conversión.
Se supone que pyjnius ha hecho correciones con el tratamiento de longs, pero no me funciona.

2017-08-19

Debería ser más sencillo hacerlo funcionar arreglando el problema de la longitud del entero que permitir que el servicio arranque
No sé si tendré que patchear pyjnius o si puedo hacer el casting desde Planilla

He intentado hacer un cast('java/lang/long', ert), pero pyjnius dice que no se puede.

2017-08-21

Resuelto el problema de la biblioteca subyacente cuando se aceptó mi pull request https://github.com/kivy/pyjnius/pull/291. Con esto se arregla el problema de AlarmManager.set.
Aún está por ver que funcione con el nuevo tipo de servicio.

2018-12-05

Varios días tratando de producir un apk de planilla con los entornos actuales. Algunas conclusiones:

* El problema del servicio de los servicios establecidos a la antigua al que me refería en 2017 está resuelto en 2018, pero no en la versión de python4android disponible en pip, sino sólo en el master de github. Para que se descargue esta hay que descomentar "p4a.source_dir =" en buildozer.spec, pero dejarlo en blanco.

* Los errores de buildozer llevan a error. Al menos a mí durante días. Lo que parece inicialmente un error de buildozer o python-for-android es un error que está escondido en los logs previos. Tratar de ejecutar el comando fallido en rojo genera errores diferentes a los iniciales. Probablemente porque la versión del SDK y del NDK se pasan por entorno y no por línea de comandos.

* En python2 hay un error gordo en hostpython que hay que corregir en la fuente para que buildozer pueda correr. Véase https://github.com/kivy/python-for-android/issues/1297 y el patch al que se refiere: https://github.com/python/cpython/commit/e348c8d154cf6342c79d627ebfe89dfe9de23817#diff-fb41bdaf12f733cf6ab8a82677d03adc

* Hay que ser exquisito con la versión de cython que se usa en función de la versión de kivy que se esté instalando. Ver https://kivy.org/doc/stable/installation/deps-cython.html. Pero ni siquiera lo que ponía ahí es correcto! Para compilar kivy 1.10.1 he tenido que usar cython 0.25.2. Usar pip3 install cython==0.25.2

2018-12-10

Las versiones compiladas con python3crystax parece que fuerzan la lectura de los archivos como ascii, en lugar de utf-8. En lugar de pelearme o de un workaround vuelvo a intentar que buildozer utilice un python3 nativo como se supone que puede hacer.

Para ello y para descartar otros errores empiezo de cero con una máquina docker que sólo tiene python 3.7.1. Instalo los paquetes como se indica en https://github.com/tshirtman/Buildozer-docker/blob/master/Dockerfile, pero produzco mi propio container basado en python y debian stretch.

Según la documentación buildozer debería usar python3 por defecto, pero siempre proponía recipes de pythonforandroid que bien usaban python2 o python3crystax. Finalmente he tenido que forzar la rama master de p4a en el buildozer.spec para que pythonforandroid se comportara.

